name: "CodeQL Advanced"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '45 9 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        # 在这里添加要分析的语言
        # 示例：使用 'c-cpp'、'python' 或其他你需要的语言
        - language: 'python'
          build-mode: 'automatic'
        - language: 'javascript-typescript'
          build-mode: 'automatic'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 初始化 CodeQL 工具
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # 如果你希望指定自定义查询，可以在此处设置
        # queries: security-extended,security-and-quality

    # 在 CodeQL 分析前运行 configure 脚本
    - name: Run Configure Script
      run: |
        chmod +x ./configure  # 确保 configure 脚本具有可执行权限
        ./configure           # 运行 configure 脚本，配置构建环境

    # 如果 'build-mode' 为 'manual'，你需要手动构建代码
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'Running manual build step'
        # 这里替换为你的构建命令
        # 例如：make bootstrap 或其他你需要的构建命令
        make bootstrap
        make release

    # 进行 CodeQL 分析
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"
